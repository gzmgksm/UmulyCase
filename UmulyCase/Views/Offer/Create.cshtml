@using UmulyCase
@using System
@model dynamic
@{
    ViewData["Title"] = "New Offer";

}

@section Scripts{

    <script type="text/javascript">
        var offerObj = @Html.Raw(@Model.OfferJson);
        var countries = @Html.Raw(@Model.Countries);
        var selectedCountry;
        var selectedCity;
    </script>

}
     <h1 class="display-5 text-center"> @ViewBag.Title </h1>
      
     <div class="row">
            <div class="align-content-center">
                <button class="btn btn-outline-primary" onclick="location.href='@Url.Action("Index")'">Go to Index</button>
            </div>
        </div>
         <br />
    <form>
        <div class="row">
            <div class="col-4">
                <div class="form-group row">
                    <label class="col-4 col-form-label text-end fw-bold" for="OfferId">Offer Id:</label>
                    <div class="col-8">
                        <input type="text" class="form-control-plaintext" id="OfferId" value="" disabled>
                    </div>
                </div>
            </div>
            <div class="col-4">
                <div class="form-group row">
                    <label class="col-4 col-form-label text-end fw-bold " for="OfferDate"> Offer Date:</label>

                    <div class="col-8">
                        <div class="input-grup date">
                            <input type="text" class="form-control datepicker" id="OfferDate">
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-4">
            <div class="form-group row p-1">
                <label class="col-3 col-form-label text-end fw-bold " for="description">Description:</label>
                <div class="col-9">
                    <input type="text" class="form-control" id="description" value="">
                </div>
            </div>

            <div class="form-group row">
                <label class="col-3 col-form-label text-end fw-bold ">User</label>
                <div class="col-9">
                    <input type="text" class="form-control" id="userName" value="">
                </div>
            </div>
        </div>
        <hr />
        <h5 class="caption text-center">Details</h5>

        <div class="row">

            <div class="col-4">

                <div class="form-group row">
                    <label class="col-3 col-form-label text-end fw-bold " for=" ModeName">Mode</label>
                    <div class="col-9">
                        <select class="form-select p-1" id="ModeName">
                        @if (Model.Modes != null)
                        {
                            foreach (var mode in Model.Modes)
                            {
                                <option value="@mode.ModeId">@mode.ModeName</option>
                            }
                        }

                    </select>
                </div>
            </div>
            <div class="form-group row">
                <label class="col-3 col-form-label text-end fw-bold " for="IncotermName">Incoterm</label>
                <div class="col-9">
                    <select class="form-select p-1" id="IncotermName">
                        @if (Model.Incoterms != null)
                        {
                            foreach (var incoterm in Model.Incoterms)
                            {
                                <option value="@incoterm.IncotermId">@incoterm.IncotermName</option>
                            }
                        }

                    </select>
                </div>
            </div>
        </div>

        <div class="col-4">

            <div class="form-group row">
                <label class="col-3 col-form-label text-end fw-bold " for="MovementTypeName">Movement</label>
                <div class="col-9">
                    <select class="form-select p-1" id="MovementTypeName">
                        @if (Model.Movements != null)
                        {
                            foreach (var movement in Model.Movements)
                            {
                                <option value="@movement.MovementId">@movement.MovementName</option>
                            }
                        }

                    </select>
                </div>
            </div>

            <div class="form-group row">
                <label class="col-3 col-form-label text-end fw-bold " for="PackageTypeName">Package</label>
                <div class="col-9">
                    <select class="form-select p-1" id="PackageTypeName">
                        @if (Model.Packages != null)
                        {
                            foreach (var packages in Model.Packages)
                            {
                                <option value="@packages.PackageId">@packages.PackageName</option>
                            }
                        }

                    </select>
                </div>
            </div>

        </div>
        <div class="col-4">

            <div class="form-group row">
                <label class="col-3 col-form-label text-end fw-bold ">Unit:</label>
                <div class="col-9">
                    <select class="form-select p-1" id="UnitTypeName">
                        @if (Model.Units != null)
                        {
                            foreach (var unit in Model.Units)
                            {
                                <option value="@unit.UnitId">@unit.UnitName</option>

                            }
                        }
                    </select>
                </div>
            </div>

            <div class="form-group row">
                <label class="col-3 col-form-label text-end fw-bold " for="CurrencyType">Currency:</label>
                <div class="col-9">
                    <select class="form-select p-1" id="CurrencyType">
                        @if (Model.Currencies != null)
                        {
                            foreach (var currency in Model.Currencies)
                            {
                                <option value="@currency.CurrencyId">@currency.CurrencyName</option>

                            }
                        }

                    </select>
                </div>

            </div>
        </div>
        <div class="col-4">

            <div class="form-group row">
                <label class="col-3 col-form-label text-end fw-bold " for="CountryName">Country</label>
                <div class="col-9">
                    <input type="text" class="form-control p-1 country" id="CountryName" value="">

                </div>
            </div>

        </div>
        <div class="col-4">

            <div class="form-group row">
                <label class="col-3 col-form-label text-end fw-bold " for="CityName">City</label>
                <div class="col-9">
                    <input type="text" class="form-control p-1 city" id="CityName" value="">

                </div>
            </div>

        </div>
    </div>
   
       
        <div class="row">
            <div class="align-content-center">
                <input type="button" class="btn btn-outline-primary" id="btnSubmit" value="Save" />
            </div>
        </div>
    
    
</form>
<script type="text/javascript">

    document.addEventListener('DOMContentLoaded', function () {


        var descriptionElm = document.getElementById("description").addEventListener('keyup', function () {
            offerObj.Description = this.value;

        });
        var dateElm = document.getElementById("OfferDate");

        dateElm.addEventListener('keyup', function () {
            offerObj.OfferDate = this.value;

        });
        dateElm.addEventListener('change', function () {
            offerObj.OfferDate = this.value;

        });
        var UserElm = document.getElementById("userName");
        UserElm.addEventListener('keyup', function () {
            offerObj.UserName = this.value;

        });
        UserElm.addEventListener('change', function () {
            offerObj.UserName = this.value;

        });

        var mode = document.getElementById("ModeName");
        mode.addEventListener('change', function () {
            setMode(this.value);
        });

        if (offerObj.Details[0].Mode.ModeId == 0) {
            console.log(mode);
            setMode(mode.value);
        };
        var incoterm = document.getElementById("IncotermName");
        incoterm.addEventListener('change', function () {
            setIncoterm(this.value);
        });
        if (offerObj.Details[0].Incoterm.IncotermId == 0) {
            console.log(incoterm);
            setIncoterm(incoterm.value);
        };

        var movement = document.getElementById("MovementTypeName");
        movement.addEventListener('change', function () {
            setMovement(this.value);
        });
        if (offerObj.Details[0].Movement.MovementId == 0) {
            setMovement(movement.value);
        };

        var package = document.getElementById("PackageTypeName");
        package.addEventListener('change', function () {
            setPackage(this.value);
        });
        if (offerObj.Details[0].PackageType.PackageId == 0) {
            setPackage(package.value);
        };

        var unit = document.getElementById("UnitTypeName");
        unit.addEventListener('change', function () {
            setUnitType(this.value);
        });

        if (offerObj.Details[0].Unit.UnitId == 0) {
            setUnitType(unit.value);
        };

        var currency = document.getElementById("CurrencyType");
        currency.addEventListener('change', function () {
            setCurrency(this.value);
        });

        if (offerObj.Details[0].Currency.CurrencyId == 0) {
            setCurrency(currency.value);
        };

        var country = document.getElementById("CountryName");
        country.addEventListener('change', function () {
            setCountry(selectedCountry);
        });
       
        country.addEventListener('blur', function () {
            setCountry(selectedCountry);
        });
        if(offerObj.Details[0].Country.CountryId ==0){
            setCountry(selectedCountry);
        }
        var city = document.getElementById("CityName");
        
        city.addEventListener('change', function () {
            setCity(selectedCity);
        });
        
        city.addEventListener('blur', function () {
            setCity(selectedCity);
            console.log(selectedCity);
        });

        if (offerObj.Details[0].City.CityId == 0) {
            setCountry(selectedCity);
        }

        // Data fonksiyonları
        function setMode(value) {
            offerObj.Details[0].Mode.ModeId = value;
            offerObj.Details[0].Mode.ModeName = $("#ModeName option:selected").text();
        };
        function setIncoterm(value) {
            offerObj.Details[0].Incoterm.IncotermId = value;
            offerObj.Details[0].Incoterm.IncotermName = $("#IncotermName option:selected").text();
        };
        function setMovement(value) {
            offerObj.Details[0].Movement.MovementId = value;
            offerObj.Details[0].Movement.MovementName = $("#MovementTypeName option:selected").text();
        };
        function setPackage(value) {
            offerObj.Details[0].PackageType.PackageId = value;
            offerObj.Details[0].PackageType.PackageName = $("#PackageTypeName option:selected").text();
        };
        function setUnitType(value) {
            offerObj.Details[0].Unit.UnitId = value;
            offerObj.Details[0].Unit.UnitName = $("#UnitTypeName option:selected").text();
        };
        function setCurrency(value) {
            offerObj.Details[0].Currency.CurrencyId = value;
            offerObj.Details[0].Currency.CurrencyName = $("#CurrencyType option:selected").text();
        };
        function setCountry(value) {
            offerObj.Details[0].Country.CountryId = value;
            offerObj.Details[0].Country.CountrName = $("#CountryName option:selected").text();
        };
        function setCity(value) {
            offerObj.Details[0].City.CityId = value;
            offerObj.Details[0].City.CityName = $("#CityName option:selected").text();
        }

        function checkCountryAndCity() {
            return offerObj.Details[0].Country.CountryId == 0 | offerObj.Details[0].City.CityId == 0;
        }

        //kayıt işlemi için datanın ajax ile OfferControllere gönderilmesi
        document.getElementById("btnSubmit").addEventListener('click', function () {
            if (offerObj == null || offerObj == undefined) {
                alert("Data does not changed.");
                return;
            }
            if (checkCountryAndCity()) {
                return;
            }

            $.ajax({
                url: "/Offer/Create",
                type: "Post",
                dataType: "json",
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("XSRF-TOKEN", $('input:hidden[name="__RequestVerificationToken"]').val());
                },
                data: offerObj,
                success: function (result) {
                    alert('Created completed successfully.')
                    location.href = 'Index';
                }
            })
        });

        function datTime() {
            $('#.datepicker').datetimepicker();
        };
    });
</script>
